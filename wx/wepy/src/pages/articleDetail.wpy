<style lang="less" >
@import "../wxParse/wxParse.wxss";
.wxParse-div{
	font-size: 36rpx;
	color: #353535;
	letter-spacing: 1.2rpx;
  line-height: 56rpx;
  margin-bottom: 32rpx;
	.word{
		display:none;
	}
	.wxParse-span{
		.WxEmojiView {
			font-size: 0px;
		}
  }
}
.wxParse-p {
  margin-bottom: 32rpx;
  font-size: 36rpx;
  color: #353535;
  .wxParse-span .wxParse-inline {
    font-size: 32rpx;
    line-height: 44rpx;
  }
}
.wxParse-img {
  display: block;
}
.wxParse-table {
  margin-bottom: 32rpx;
}
.wxParse-td {
  padding: 10px;
  .wxParse-a {
    color: #FF9400;
  }
}
.wxParse-tr {
  border-bottom: 0;
  border-color: #e0e0e0;
  &:last-child {
    border-bottom:1px solid #e0e0e0;
  }
}
.wxParse-td {
  border-color: #e0e0e0;
}
.wxParse {
	margin: 0;
}
.wxParse-img {
  width: 100%;

}
page {
  background: #fff;
}
.container {
  padding: 32rpx 32rpx 64rpx 32rpx;
}
.title {
  font-size: 48rpx;
  font-weight: bold;
  color: #353535;
  letter-spacing: 0.6rpx;
  line-height: 68rpx;
}
.desc {
  margin: 24rpx 0;
  font-size: 24rpx;
  color: #b2b2b2;
  letter-spacing: 0;
  line-height: 36rpx;
  .desc-date {
    margin-right: 40rpx;
  }
}
.copyright {
  font-size: 28rpx;
  color: #b2b2b2;
  line-height: 28rpx;
  margin: 32rpx 0 64rpx;
}
.share {
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
  background: #09bb07;
  border: 0;
  border-radius: 8rpx;
  width: 100%;
  height: 88rpx;
  font-size: 32rpx;
  color: #fff;
  &::before {
    content: "\e7c5";
    font-size: 30rpx;
    font-family: 'vanca';
    margin-right: 16rpx;
  }
}
</style>
<template>
<view>
  <articleSkeletion wx:if="{{!articleData.content}}"></articleSkeletion>
  <view class="container">
    <block wx:if="{{!emptyMsg}}">
      <view class="title">
        <text>{{articleData.title}}</text>
      </view>
      <view class="desc">
        <text class="desc-date">{{articleData.createtime}}</text>
        <text class="desc-author" wx:if="{{articleData.username}}">编辑：{{articleData.username}}</text>
      </view>
      <view class="wxParse">
            <import src="../wxParse/wxParse.wxml"/>
            <template is="wxParse" data="{{wxParseData:article.nodes}}"></template>
      </view>
      <block wx:if="{{articleData.content}}">
        <view class="copyright">
          <text>版权说明，未经允许不可转载</text>
        </view>
        <button class="share" open-type="share">分享给好友</button>
      </block>
    </block>
    <empty :msg.sync="emptyMsg" jump='' wx:if="{{emptyMsg}}"></empty>
  </view>
  <!-- 返回主页按钮 -->
  <goBack></goBack>
  <workSuccess wx:if="{{taskStatus.rulename}}" :taskObject.sync="taskStatus"></workSuccess>
</view>
</template>

<script>
import wepy from 'wepy'
import mixin from '../mixins'
import empty from '../components/public/dataEmpty'
import articleSkeletion from '../components/public/articleSkeletion'
const WxParse = require('../wxParse/wxParse.js')
import goBack from '@/components/public/goBack'
import workSuccess from '../components/public/workSuccess'
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '卡家文章'
  }
  components = {
    empty,
    goBack,
    articleSkeletion,
    workSuccess
  }

  mixins = [mixin]

  data = {
    postTaskStatus: {}, // 获取具体任务内容
    taskStatus: {}, // 分享成功以后文章任务具体对象
    id: 0,
    openid: '', // 用户uid
    articleData: {},
    emptyMsg: ''
  }

  computed = {}

  methods = {}

  events = {
    closeWorkSuccess: $event => {
      this.taskStatus = {}
    }
  }

  // 获取文章详情
  getDetail(id) {
    let url = `${this.host}/article?id=${this.id}`
    wepy.request(url).then(res => {
      let { data, statusCode } = res
      // 请求失败
      if (statusCode !== 200) {
        return
      }
      let content = data.data.content
      // 服务器错误
      if (data.status) {
        this.emptyMsg = '网络错误，请稍后再试~'
        this.$apply()
        return
      } else if (!content) {
        this.emptyMsg = '文章已删除~'
        this.$apply()
      }
      this.articleData = data.data
      WxParse.wxParse('article', 'html', content, this, 0)
      this.$apply()
    })
  }

  // 分享
  onShareAppMessage(res) {
    if (res.from === 'button') {
    }
    return {
      title: this.title,
      path: `/pages/articleDetail?id=${this.id}`,
      success: async res => {
        this.taskStatus = await this.finishTask(this.postTaskStatus, this.openid)
        this.$apply()
      },
      fail: res => {
        // 转发失败
      }
    }
  }
  async onLoad(option) {
    this.id = option.id
    this.getDetail(option.id)
    this.openid = await this.getOpenid()
    this.postTaskStatus = this.getOnlyTask('360che_tuan_task_share_article') || {}
    this.$apply()
  }
}
</script>
